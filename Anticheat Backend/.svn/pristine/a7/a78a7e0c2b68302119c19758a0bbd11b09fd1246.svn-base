function saveAdminUser(userName, password) {
	const token = localStorage.getItem('token');
    const apiUrl = "http://localhost/api/admin/save";
    const requestData = {
        userName: userName,
        password: password
    };

    return fetch(apiUrl, {
        method: 'POST',
        headers: {
			'Authorization': token,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
    })
    .then(response => {
        if (response.ok) {
            return response.json();
        } else if (response.status === 409) {
            // HTTP status code 409 indicates a conflict, meaning the username already exists
            return Promise.reject('Username already exists');
        } else {
            return Promise.reject('Error: ' + response.statusText);
        }
    })
    .then(data => {
        alert('User saved successfully');
    })
    .catch(error => {
        alert(error);
    });
}


$(document).ready(function() {
    // Add an event listener to the "Add User" button
    $("#addUserButton").off("click").on("click", function(e) {
        e.preventDefault();

        // Get the username and password values from the input fields
        const userName = $("input[name='userId']").val();
        const password = $("input[name='password']").val();

        // Check if both fields have values
        if (userName && password) {
            saveAdminUser(userName, password)
                .then(data => {
                    alert('User saved successfully');
                    // Clear input fields
                    $("input[name='userId']").val('');
                    $("input[name='password']").val('');
                    // Update the user list
                    populateUserList();
                })
                .catch(error => {
                    alert('Error: ' + error);
                });
        } else {
            alert('Please enter both username and password.');
        }
    });
});







// Create a function to list all admin users
function listAdminUsers() {
	const token = localStorage.getItem('token');
    const apiUrl = "http://localhost/api/admin/list";

    return fetch(apiUrl, {
        method: 'POST', 
        headers: {
			'Authorization': token,
            'Content-Type': 'application/json'
        },
    })
    .then(response => response.json())
    .catch(error => console.error('Error:', error));
}


// Function to populate the table with admin user data
function populateUserList() {
    listAdminUsers()
        .then(data => {
            var bodyData = "";
            for (let i = 0; i < data.length; i++) {
                var user = data[i];
                bodyData += '<tr class="text-center">';
                bodyData += '<td>' + user.userName + '</td>';
                bodyData += '<td><input type="text" class="form-control password-input" value="' + user.password + '"></td>';
                bodyData += '<td style="width: 20%;"><button class="btn btn-success change-pwd-button" data-user-id="' + user.id + '" style="width: 120px;">Change Pwd</button>';
                bodyData += '<td style="width: 20%;"><button class="btn btn-danger delete-button" data-user-id="' + user.id + '" style="width: 50%;">Delete</button></td>';
                bodyData += '</tr>';
            }
            $("#userlist").html(bodyData);

  // ...
// Add click event listeners for the "Change Pwd" buttons
$(".change-pwd-button").off("click").on("click", function() {
    const userId = $(this).data("user-id");
    const newPasswordInput = $(this).closest("tr").find(".password-input");
    const newPassword = newPasswordInput.val();

    if (newPassword) {
        updateAdminPassword(userId, newPassword)
            .then(response => {
                console.log('Password updated successfully:', response);
                newPasswordInput.prop('disabled', true);
                alert('Password updated successfully');
                // You can handle the response or update the UI here
            })
            .catch(error => {
                console.error('Error updating password:', error);
            });
    } else {
        alert('Please enter a new password.');
    }
});


            // Add click event listeners for the "Delete" buttons
            $(".delete-button").off("click").on("click", function() {
                const userId = $(this).data("user-id");
                if (confirm("Are you sure you want to delete this user?")) {
                    deleteAdminUser(userId)
                        .then(response => {
                            console.log('User deleted successfully:', response);
                            alert('User deleted successfully');
                            populateUserList();
                        })
                        .catch(error => {
                            console.error('Error deleting user:', error);
                        });
                }
            });
        })
        .catch(error => {
            console.error('Error:', error);
        });
}

// Call the function to populate the user list
populateUserList();









// Create a function to log in as an admin user
function loginAdmin(userName, password) {
	const token = localStorage.getItem('token');
    const apiUrl = "http://localhost/api/admin/login";
    const requestData = {
        userName: userName,
        password: password
    };

    return fetch(apiUrl, {
        method: 'POST',
        headers: {
			'Authorization': token,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
    })
    .then(response => response.json())
    .catch(error => console.error('Error:', error));
}

// Create a function to update an admin user's password
function updateAdminPassword(adminId, newPassword) {
	const token = localStorage.getItem('token');
    const apiUrl = "http://localhost/api/admin/updatePassword";
    const requestData = {
        id: adminId,
        password: newPassword
    };

    return fetch(apiUrl, {
        method: 'POST',
        headers: {
			'Authorization': token,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
    })
    .then(response => response.json())
    .catch(error => console.error('Error:', error));
}

// Create a function to delete an admin user
function deleteAdminUser(adminId) {
	const token = localStorage.getItem('token');
    const apiUrl = "http://localhost/api/admin/delete";
    const requestData = {
        id: adminId
    };

    return fetch(apiUrl, {
        method: 'POST',
        headers: {
			'Authorization': token,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestData)
    })
    .then(response => response.json())
    .catch(error => console.error('Error:', error));
}


